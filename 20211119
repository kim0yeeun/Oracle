-- 11/19
-- 프로젝션 : 원하는 열만 가져오도록한다.
-- * : 모든 컬럼을 프로젝션하겠다. 
select * from employees;
select * from departments;
select * from jobs;
select * from job_history;

-- 1. 직원번호, 이름, 이메일, 입사일, 급여
select employee_id, first_name, email, hire_date from employees;

-- 2. 직원번호, 이름(firstname), 급여, 각 사원 급여에 100을 더해서 출력하세요.
select employee_id, first_name, salary+100 from employees;

-- 3. 직원번호, 성(lastname), 입사일, 직무, 연봉을 출력하세요.
select employee_id, last_name, hire_date, job_id, salary, salary*12
from employees;

-- 부서정보
select * from departments;

-- 4. 주소, 부서번호, 부서장번호, 부서명 -- 컬럼의 순서를 내 마음대로 가져올 수 있다. 
select location_id, department_id, manager_id, department_name
from departments;

-- 5. 사원테이블에서 직원번호, 입사일, 성, 급여 -- 컬럼의 순서 바꾸기 
select employee_id, hire_date, last_name, salary from employees;

-- 6. 사원테이블에서 사원번호, 부서번호, 직무, 연봉을 출력 매월 300씩 보너스 지급해서 출력
select employee_id, department_id, job_id, (salary + 300) * 12
from employees;

-- 7. 사원테이블에서 사원번호, 부서번호, 직무, 연봉을 출력 마지막 달에 300이 특별보너스로 지급
select employee_id, department_id, job_id, salary * 12 + 300
from employees;

-- 8. 사원테이블에서 사원번호, 성, 이메일, 급여, 연봉 출력
select employee_id, last_name, email, salary, salary*0.3 from employees;

-- 9. 사원테이블에서 직원번호, 이메일, 이름, 입사일, 급여, 커미션퍼센트, 
select employee_id, email, first_name, hire_date, salary, commission_pct
from employees;

-- 10을 출력하세요
select 10 from dual; -- 테이블이 없을 경우에는 dual이라는 가상 테이블 사용

-- 10에 null을 곱하세요.
select 10*null from dual;

-- 10. 사원테이블에서 직원번호, 이메일, 이름, 입사일, 급여, 커미션퍼센트를 출력하는데
--     각 사원이 받는 커미션의 금액도 같이 출력하세요.
select employee_id, email, first_name, hire_date, salary, commission_pct, salary * commission_pct
from employees;

select employee_id, email, hire_date, salary+null from employees;

-- 커미션 받는 부서 알아보기 : department_id 
select employee_id, email, hire_date, department_id, commission_pct
from employees;

-- 80번 부서가 커미션 받네? 뭐하는 부서지?
select employee_id, email, hire_date, department_id, job_id, commission_pct
from employees;
-- sales~~~  영업부 직원이 커미션을 받는다는 걸 알 수 있다. 


-- 11. 직원번호, 이메일, 이름, 입사일, 연락처, 급여, 커미션퍼센트, 
--     그리고 커미션이 포함된 연봉을 출력하세요. 
select employee_id, email, first_name, hire_date, phone_number, salary, commission_pct, (salary+(salary*commission_pct))*12
from employees;

-- 12. heading name 에 별칭 주기 

select employee_id eid, email, last_name lname, hire_date hd, phone_number ph, department_id did
        ,salary sal, commission_pct comm, (salary+(salary*commission_pct))*12 year_sal
from employees;  

-- 13. 별칭에 as 사용하기
select employee_id as eid, email, first_name as fname, salary as sal 
from employees;

--14. 별칭에 공백문자와 대소문자 구분하기 (별칭에는 공백문자를 사용할 수 없다.)
select employee_id, first_name, salary, commission_pct
        , salary + salary * 12 as "year sal" -- 공백 문자는 "" 을 사용한다.
        , salary + salary * 12 "year sal"
        , salary + salary * 12 as Year_sal
        , salary + salary * 12 as "Year sla"
from employees;
-- 그치만 자바에서 문자열 "" 할때 오류가 생길 수 있으므로 
-- 공백문자는 "" 말고 _ 로 처리해 주는 것이 좋다. 대소문자도 꼭 구별해주지 않아도 좋다. 

-- 15. 문자열 붙이기 연산자 : || 
select '이' || '숭무'  from dual;

select employee_id, '나의 성은 ' || last_name, first_name, salary 
from employees;

select employee_id, last_name, salary, '2021-11-19',35 from employees;

-- 16. 직원번호, 성이름 붙여서 출력, 급여, 직무 출력 
select employee_id, last_name || first_name, salary, job_id
from employees;

-- 17. 성과 이름 사이에 공백 문자 출력 
select employee_id, last_name || ' ' || first_name, salary, job_id
from employees;

-- 18. 사원번호와 급여를 출력하는사이에 아래 내용처럼 출력되게 하세요.
-- kingSteven의 직무는 AD_PRES입니다. 로 출력
select employee_id, last_name || first_name || '의 직무는 ' || job_id ||'입니다.', salary
from employees;

-- 19. 직원의 부서번호만 출력하세요.
select department_id from employees;

-- distinct : 중복 없애기 
-- 20. 직원의 부서번호만 출력하되, 중복하지 않도록 한번씩만 출력하세요. 
select distinct department_id from employees;

-- 부서 한 번에 직무 한번씩만 출력
select distinct job_id, department_id
from employees;
-- 두개의 컬럼을 적어주었을 때 적어도 하나의 컬럼이 같지 않으면 또 출력된다 (중복 제거 대상이 안된다.)

--     107               12           이므로 distinct를 가운데에 사용할 수 없다. 맨 앞만 사용 가능
select job_id, distinct department_id from employees; -- 실행되지 않음

-- 21. 직무와 입사일이 중복되지 않은 것만 출력하세요.
select distinct job_id, hire_date from employees; 
-- 105명이 출력됨으로써 2명의 직무와 입사일이 같다는걸 알 수 있다.

------ Projection ------- 원하는 열 가져오기 
-- select 컬럼, ... , 연산식
-- from 테이블명

------ Selection -------- 원하는 행 가져오기 
-- 조거식 : where 절
-- select 컬럼, ... , 연산식
-- from 테이블명
-- where 조건식

-- 22. 90인 부서의 사원들을 출력하세요.
select * 
from employees
where department_id = 90;

-- 23. 사원번호, 성, 이름 급여 출력
select employee_id, last_name, first_name, salary
from employees;

-- 24. 23번에서 부서가 90인 사원들을 출력할 때 사원번호, 이름, 성, 급여 출력
select employee_id, first_name, last_name, salary
from employees
where department_id = 90;

-- 25. 이름이 'Nancy' 인 사원의 입사일, 직무, 급여, 커미션퍼센트를 출력하세요.
select hire_date, job_id, salary, commission_pct
from employees
where first_name = 'Nancy';
-- 문자열 리터널 값은 대소문자를 제대로 구분해주지 않으면 정확한 정보를 불러올 수 없다.
-- 예) nancy, NANCY -> 출력되지 않음

-- 26. 입사일이 06/01/03 인 사원을 출력하세요.
select * from employees
where hire_date = '06/01/03';
select * from employees
where hire_date = '06-01-03';
select * from employees
where hire_date = '06.01.03';
select * from employees
where hire_date = '2006-01-03';
select * from employees
where hire_date = '060103';
-- 데이터 타입이 date나 timestamp인 경우 060103, 06-01-03, 06/01/03 20060103 모두 사용이 가능하다. 

-- 비교 연산(관계연산) : =, >, >=, <, <=, <> , !=, ^= 
-- 27. 급여가 3000 이상인 사원들의 성과 급여를 출력하세요.
select last_name, salary 
from employees
where salary >= 3000;

-- 28. 입사일이 06/01/03 보다 늦게 입사한 직원의 사워번호, 이름, 급여를 출력하세요.
select employee_id, first_name, salary
from employees
where hire_date > '060103';

-- 29. 급여가 3000이 아닌 사원을 모두 출력하세요.
select employee_id from employees where salary != 3000;
select employee_id from employees where salary <> 3000;
select employee_id from employees where salary ^= 3000;

-- 30. 급여가 2500에서 3500사이인 사원들 중 사원번호와 이름 급여 작무 입사일을 출력
select employee_id, first_name, salary, job_id, hire_date from employees
where salary between 2500 and 3500;

-- 31. 성이 King 부터 Smith 사이에 있는 사원들을 출력하세요
select * from employees
where last_name between 'King' and 'Smith';

-- 32. 입사일이 02 06 07 부터 06 10 03 사이에 입사한 사원들을 출력하세요.
select * from employees
where hire_date between '020607' and '060103';

-- 33.
-- 50 인 부서의 사원을 출력하세요.
select * from employees where department_id = 50;
-- 70 인 부서의 사원을 출력하세요.
select * from employees where department_id = 70;
-- 90 인 부서의 사원을 출력하세요.
select * from employees where department_id = 90;

-- 34. 50,70,90 인 부서의 사원을 출력하세요.
select * from employees where department_id in (50,70,90);

-- 35. 상사가 100,101,102 인 사원들을 출력하세요.
select * from employees where manager_id in (100,101,102);

-- 36. 성이 'Hartstein' , 'Vargas' 인 사원들을 출력하세요.
select * from employees where last_name in ('Hartstein','Vargas');

-- 37. 사장의 직원번호는 100번이다. 사장이 직속상사인 사원을 출력하세요
select * from employees where manager_id = 100;


---- LIKE
-- like  '%a'  : a로 끝나는 문자열
-- like  'a%'  : a로 시작하는 문자열 
-- like  '%a%' :  a가 포함된 문자열
-- 38. 성에 s가 포함되어있는 직원을 출력하세요.
select * from employees where last_name like '%s%';
-- select * from employees where last_name like '%이숭무%';
-- 검색 엔진에 많이 사용되는 로직이므로 잘 기억하자 ※

-- 39. 직무에 'CL' 이 포함된 사원들을 출력하세요.
select * from employees where job_id like '%CL%';

-- 40. 직무에 'ST' 이 포함된 사원들을 출력하세요.
select * from employees where job_id like '%ST%';

-- 41. 이름이 'B' 로 시작하는 사원을 출력하세요.
select * from employees where first_name like 'B%';
select * from employees where first_name like 'b%'; -- 출력x 대소문자 구분하기 

-- 42. 이름이 'a' 로 끝나는 사원을 출력하세요.
select * from employees where first_name like '%a';

-- 43. 02 년도에 입사한 사원을 출력하세요. 
select * from employees where hire_date like '02%';

-- 44. 02 월에 입사한 사원을 출력하세요.
select * from employees where hire_date like '%02%';
-- 02/01/01, 01/02/01, 05/1/02 다 출력된다.
-- 세번째부터 02 인 사원을 출력하면 된다 _ _ _  02 
select * from employees where hire_date like '__02%';

-- 45. 이메일에 두번째 글자가 'K' 인 사원을 출력하세요.
select * from employees where email like '_K%'; 

-- 46. 성에 두번째 글자가 'o' 인 사원을 출력하세요.
select * from employees where last_name like '_o%';

-- 47. 이메일에 세번째 글자가 'A' 인 사원을 출력하세요.
select * from employees where email like '__A%';

-- 48. 이메일에 세번째 글자가 'O' 인 사원을 출력하세요.
select * from employees where email like '__O%';

-- 49. 이메일에 마지막에서 두번째 글자가 'O' 인 사원을 출력하세요.
select * from employees where email like '%O_';

-- 50. 이메일의 앞에서 두번째가 K 이고 뒤에서 두번째가 O 인 사원을 출력하세요.
select * from employees where email like '_K%O_';

-- 51. IT_로 시작하는 직무를 출력하세요.
-- escape : \ 
select * from employees where job_id like 'IT\_%' escape '\';
select * from employees where job_id like 'IT|_%' escape '|';

-- 52. 02월에 입사한 사원을 출력하세요.
select * from employees where hire_date like '___02%' escape '\';


-- null
-- 53. 커미션을 받지 못하는 직원들을 출력하세요.
select * from employees where commission_pct = null; -- 안됨 
-- null 은 알 수 없는 값이기 때문에 같을 수 가 없다. 
select * from employees where commission_pct is null;

-- 54. 상사가 없는 사원을 출력하세요
select * from employees where manager_id is null;

-- 55. 부서에 부서장이 없는 부서정보를 출력하세요.
select * from departments where manager_id is null;

-- 56. 부서가 없는 직원을 출력하세요.
select * from employees where department_id is null;


--- 논리연산자 : or, and : 부울타입끼리의 연산 -> 비교연산자 
-- 57. 직무가 AD_VP이면서 부서번호가 90 인 사원을 출력하세요. 
select * from employees where job_id = 'AD_VP';
select * from employees where department_id = 90;
select * from employees where job_id = 'AD_VP' and department_id = 90;

-- 58. 급여가 10000이상이면서 직무에 'MAN' 이 포함되어 있는 사원을 출력하세요.
select * from employees where salary >= 10000 and job_id like '%MAN%';

-- 59. 급여가 5000 부터 10000 사이인 사원을 구하세요.
select * from employees where salary between 5000 and 10000;
select * from employees where salary >=5000 and salary <= 10000;

-- 60. 입사일이 030617 에서 05 09 21 사이인 사원을 and를 사용해서 출력하세요.
select * from employees where hire_date > '03 06 17' and hire_date < '05 09 21';

-- 61. 급여가 10000이상인 사원을 출력
select * from employees where salary >= 10000;
-- 62. 직무에 'MAN' 을 포함하고 있는 사원을 출력
select * from employees where job_id like '%MAN%';
-- 63. 61의 결과와 62의 결과를 같이 출력하세요. 
select * from employees where salary >= 10000 or job_id like '%MAN%';

-- 64. 부서가 100인 사원과 직무가 'SA_REP'인 사원을 출력하세요.
select * from employees where department_id = 100 or job_id = 'SA_REP';

-- 65. 'AD_PRES','AD_VP', 'IT_PROG' 의 직무를 가진 사원들을 출력하세요.
select * from employees where job_id = 'AD_PRES' or job_id = 'AD_VP' or job_id = 'IT_PROG';
select * from employees where job_id in ('AD_PRES','AD_VP','IT_PROG');

-- 66. 직무가 IT_PROG 이거나 직무가 ST_MAN 이면서 급여가 6000 이상인 사원을 출력하세요.
select * from employees where job_id = 'IT_PROG' and salary >= 6000
                            or job_id = 'ST_MAN' and salary >= 6000;
select * from employees where (job_id = 'IT_PROG' or job_id = 'ST_MAN') and salary >= 6000 ;
select * from employees where salary >= 6000 and (job_id = 'IT_PROG' or job_id = 'ST_MAN');
-- and 가 or 연산자보다 우선순위가 높기 때문에 괄호를 꼭 작성해주어야 한다. 
-- 이럴 때는 in 연산자가 가장 편하다. 
select * from employees where job_id in('IT_PROG','ST_MAN') and salary >= 6000 ;


--- not 
-- 67. 직무가 AD_PRES ,AD_VP ,IT_PROG 에 해당하지 않는 사원을 출력하세요.
select * from employees where job_id != 'AD_PRES' and job_id != 'AD_VP' and job_id != 'IT_PROG';
select * from employees where job_id not in ('AD_PRES', 'AD_VP', 'IT_PROG');

-- 68. 급여가 6000 보다 작거나 10000보다 큰 사원을 출력하세요.
select * from employees where salary < 6000 or salary > 10000;
select * from employees where salary not between 6000 and 10000;

-- 69-1.  커미션을 받지 않는 사원들을 구하세요.
select * from employees where commission_pct is null;
-- 69-2.  커미션을 받지 않는 사원들을 구하세요.
select * from employees where commission_pct is not null;

-- 70. 부서 테이블에서 부서장이 있는 부서를 출력하세요.
select * from departments where manager_id is not null;


---- 정렬 : 내림차순, 오름차순 (테이블은 기본키 기준으로 정렬되어있다.)
select * from employees;
-- 71. 급여를 기준으로 오름차순으로 정렬되어 급여, 사원번호, 이름, 입사일을 출력하세요.
select salary, employee_id, first_name, hire_date from employees
order by salary;

-- 72. 80번 부서의 사원들을 출력할 때 입사일이 제일 빠른 사람부터 출력하세요.
select * from employees where department_id = 80
order by hire_date asc; -- asc는 오름차순인 기본 설정이므로 생략이 가능하다. 


----- 기본문법
--select                4
--from                  1
--where                 2
--order by              3
----- 

-- 73. 50번 부서의 사원을 출력하는데 입사일이 제일 늦은 사원부터 출력하세요.  
select * from employees where department_id = 50 order by hire_date desc;
-- asc : 오름차순 desc : 내림차순

-- 74. 50번 부서의 사원을 출력하는데 급여가 제일 작은 사람부터 출력하세요.
select * from employees where department_id = 50 order by salary asc;

-- 75. 급여가 6000 이상이고 10000 이하인 사원들을 입사일이 빠른 사원을 기준으로 출력하세요.
select * from employees where salary between 6000 and 10000 order by hire_date;

-- 76. 사원번호, 이름, 입사일, 급여, 부서번호를 출력할 때 급여를 제일 많이 받는 사원부터 출력. 급여에 sal로 별칭을 사용한다.
select employee_id, first_name, hire_date, salary sal, department_id
from employees
order by salary desc; -- 조건에서는 별칭을 못쓴다 
--      1           2           3           4           5
select employee_id, first_name, hire_date, salary sal, department_id
from employees
order by 4 desc; -- 정렬에 컬럼 순서 번호를 사용할 수 있다. 


-- 77. 부서가 오름차순으로 정렬된 상태에서 부서내에 있는 직무를 오름차순으로 정렬
select department_id, job_id from employees order by department_id, job_id; --asc 둘다 생략 가능 

-- 78. 부서가 오른차순으로 정렬된 상태에서 부서내에 있는 직무를 내림차순으로 정렬
select department_id, job_id from employees order by department_id, job_id desc;

-- 79. 부서가 오른차순으로 정렬된 상태에서 부서내에 있는 직무를 내림차순으로 정렬한 상태에서
--     직무에 따른 급여를 제일 많이 받는 사람부터 출력하세요.
select * from employees order by department_id, job_id desc, salary desc;
select * from employees order by 11, 7 desc, 8 desc;

-- 80. 부서를 오름차순으로 출력하고 같은 부서에서 다른 직무를 가진 사원들이 있다면 직무를 내림차순으로 정렬,
--     같은 직무에서 급여는 오름차순으로 정렬하되 급여를 받는 사람들의 입사일을 오름차순으로 정렬하세요.
select department_id, job_id, salary, hire_date from employees
order by department_id, job_id desc, salary, hire_date;

-- 81. 성이 Austin 부터 Sciarra 사이에 있는 사원들을 부서별 급여를 모두 내림차순으로 정렬하세요.
select * from employees where last_name between 'Austin' and 'Sciarra' order by department_id desc, salary desc;

-- 82. 성이 Austin 부터 Sciarra 사이에 있는 사원들을 직무별 급여를 모두 내림차순으로 정렬하세요.
select * from employees where last_name between 'Austin' and 'Sciarra' order by job_id desc, salary desc;



-- 숙제
-- 1. 틀린곳을 찾으시오
--select employee_id, last_name sal x 12 ANNUAL SALARY
--FROM hr.employees
select employee_id, last_name, salary*12  ANNUAL_SALARY
from employees;

-- 2. departments테이블의 구조를 표시하고 모든 데이터를 출력하시오.
desc departments;
select * from departments;

-- 3. employees테이블 구조를 표시하고, 이름, 직무, 입사일이 출력되도록 하시오.
desc employees;
select first_name, job_id, hire_date from employees;

-- 4. 사원번호, 성, 직무, 입사일을 출력하시오.
select employee_id, last_name, job_id, hire_date from employees;

-- 5. 사원테이블에서 직무를 출력할 때 중복 없이 출력하시오.
select distinct job_id from employees;

-- 6. 사원 번호는 Emp #, 이름은 employee, 직무는 job,입사일은 Hire Date로 heading name이 출력되게 하시오.
select employee_id Emp#, first_name employee, job_id job, hire_date "Hire Date"
from employees;

-- 7. 직무와 이름을 붙여서 출력하되 사이에 ', '들어가도록 출력하시오.
select job_id || ', ' ||first_name from employees;

-- 8. 사원 테이블에서 모든 열을 붙여서 출력하되 각각 사이에 ','가 들어가도록 하시오.
select employee_id || ',' || first_name || ',' || last_name || ',' || email || ',' || 
       phone_number || ',' || hire_date || ',' || job_id || ',' || salary || ',' ||
       commission_pct || ',' || manager_id || ',' || department_id
from employees;

-- 9. 급여가 12,000넘는 사원의 이름과 급여를 출력하시오.
select first_name, salary from employees where salary > 12000;

-- 10. 사원 번호 176인 사원의 이름과 부서번호를 출력하시오.
select first_name, department_id from employees where employee_id = 176;

-- 11. 입사일이 2002년 2월 20일 부터 2002년 5월1일 사이에 입사한 사원의 이름, 직무 및 입사일을 출력하시오.
select first_name, job_id, hire_date from employees where hire_date between '020220' and '020501';

-- 12. 관리자(manager_id)가 없는 사원을 출력하시오.
select * from employees where manager_id is null;

-- 13. 직무에 'AP'가 포함되어 있는 사원들을 모두 출력하시오.
select * from employees where job_id like '%AP%';

-- 14. 사원테이블에서 직무에 MAN를 포함하고 급여가 10000이상인 사원을 사원번호와 성과 직무 그리고 급여를 출력하시오.
select employee_id, last_name, job_id, salary from employees where job_id like '%MAN%' and salary >= 10000;

-- 15. 직무가 SA_REP이거나 AD_PRES 이면서 급여가 15000을 초과하는 사원을 출력하시오.
-- 단, 성, 직무, 급여만 출력 or와 and만 사용
select last_name, job_id, salary from employees where (job_id = 'SA_REP' or job_id = 'AD_PRES') and salary > 15000;

-- 16. 직원테이블에서 부서번호를 오름차순으로 정렬하여 출력하시오. 부서번호 , 급여, 입사일, 성
select department_id, salary, hire_date, last_name from employees order by department_id;

-- 17. 부서는 내림차순으로 정렬하고 입사일도 내림차순으로 정렬. 부서번호 , 급여, 입사일, 성
select department_id, salary, hire_date, last_name from employees
order by job_id desc, hire_date desc;

-- 18. 부서는 내림차순으로 정렬하고 입사일은 오름차순으로 정렬하여 출력. 부서번호 , 급여, 입사일, 성
select department_id, salary, hire_date, last_name from employees
order by job_id desc, hire_date;

-- 19. 부서는 내림차순으로 정렬하고 입사일은 오름차순으로 정렬하여 급여를 내림차순으로 정렬하여 출력
-- 부서번호 ,  입사일, 급여, 성
select department_id, salary, hire_date, last_name from employees
order by job_id desc, hire_date, salary desc;

